# Define o número de workers com base nos núcleos de CPU disponíveis. É a melhor prática.
worker_processes auto;

events {
    # Número de conexões por worker. 1024 é um ponto de partida seguro e robusto.
    worker_connections 1024;
    # Permite que um worker aceite múltiplas conexões de uma vez, otimizando rajadas de tráfego.
    multi_accept on;
}

http {
    # Otimizações de rede que são universalmente benéficas.
    sendfile        on; # Usa o método mais eficiente do kernel para enviar arquivos.
    tcp_nopush      on; # Envia pacotes de forma mais eficiente.
    tcp_nodelay     on; # Envia dados imediatamente, sem esperar, reduzindo a latência.

    # Timeout para conexões keep-alive com o *cliente*.
    keepalive_timeout 65s;

    upstream spring_servers {
        server app1:3001;
        server app2:3002;

        # MANTENHA UM VALOR BAIXO INICIALMENTE.
        # Este valor foi a causa provável dos seus erros. 500 é muito alto.
        # Comece com 64 e aumente apenas se sua API aguentar mais conexões ociosas.
        keepalive 64;
    }

    server {
        listen 9999;

        # É bom manter o log de acesso desativado para performance,
        # mas lembre-se de ativá-lo se precisar depurar algum problema.
        access_log off;

        location / {
            proxy_pass http://spring_servers;

            # --- CORREÇÃO FUNDAMENTAL ---
            # Habilita HTTP/1.1 e keep-alive para o backend.
            proxy_http_version 1.1;
            # A linha abaixo é a correção mais importante. Ela "limpa" o header
            # e permite que o Nginx reutilize conexões (keep-alive) com sua API.
            # O valor 'upgrade' que você usava é apenas para WebSockets.
            proxy_set_header Connection "";

            # --- Cabeçalhos Essenciais Mantidos ---
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts e Buffers estão com valores razoáveis, vamos mantê-los.
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
    }
}